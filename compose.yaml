services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      EUREKA_SERVER_PORT: ${EUREKA_SERVER_PORT}

  resource-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${RESOURCE_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d

  song-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${SONG_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d

  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      EUREKA_CLIENT_SERVICE_URL: ${EUREKA_CLIENT_SERVICE_URL}
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
    depends_on:
      - resource-db
      - eureka-server

  song-service:
    build:
      context: ./song-service
      dockerfile: Dockerfile
    ports:
      - "8084"
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      EUREKA_CLIENT_SERVICE_URL: ${EUREKA_CLIENT_SERVICE_URL}
    depends_on:
      - song-db
      - eureka-server
    deploy:
      replicas: 2
